{"version":3,"sources":["components/Data.js","components/ContainerData.js","components/SearchBox.js","components/Headers.js","containers/App.js","serviceWorker.js","index.js"],"names":["Data","_ref","name","height","weight","hair","eye","birthday","gender","react_default","a","createElement","className","ContainerData","people","map","user","i","src_components_Data","key","mass","hair_color","eye_color","birth_year","SearchBox","searchChange","type","placeholder","onChange","Headers","src_components_SearchBox","particlesJSON","particles","number","value","density","enable","value_area","color","shape","stroke","width","polygon","nb_sides","image","src","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","peoples","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchField","target","fetchSwapi","fetch","then","res","json","data","concat","results","next","state","_this2","setTimeout","_this$state","searchPeople","filter","toLowerCase","includes","length","particles_default","params","src_components_Headers","src_components_ContainerData","style","textAlign","Component","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a391d5b9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Data.css';\r\n\r\nconst Data = ({name, height, weight, hair, eye,birthday,gender}) => {\r\n    return (\r\n        <div className=\"data\">\r\n            <h1>Name: {name}</h1>\r\n            <h2>Height: {height}</h2>\r\n            <h2>Weight: {weight}</h2>\r\n            <h2>Hair: {hair}</h2>\r\n            <h2>Eye:{eye}</h2>\r\n            <h2>Birthday: {birthday}</h2>\r\n            <h2>Gender: {gender}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Data;","import React from 'react';\r\nimport Data from './Data';\r\n\r\nimport './ContainerData.css'\r\n\r\nconst ContainerData = ({people}) => {\r\n    return (\r\n        <div className=\"container\">\r\n            {\r\n                people.map((user, i)  => {\r\n                    return <Data    key={people[i].name} \r\n                                    name={people[i].name} \r\n                                    height={people[i].height} \r\n                                    weight={people[i].mass} \r\n                                    hair={people[i].hair_color} \r\n                                    eye={people[i].eye_color}\r\n                                    birthday={people[i].birth_year}\r\n                                    gender={people[i].gender} />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ContainerData","import React from 'react';\r\n\r\n\r\nimport './SearchBox.css';\r\n\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return(\r\n        <div >\r\n            <input\r\n                className=\"search\"\r\n                type=\"search\"\r\n                placeholder=\"Characters\"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport SearchBox from './SearchBox';\r\nimport './Headers.css';\r\n\r\nconst Headers = ({searchChange}) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div> <h2 className=\"logo\">StarWars Data</h2></div>\r\n            <SearchBox searchChange={searchChange}/>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Headers;","import React, {Component} from 'react';\r\n\r\nimport ContainerData from '../components/ContainerData';\r\nimport Headers from '../components/Headers';\r\nimport Particles  from 'react-particles-js';\r\n\r\n\r\nconst particlesJSON = {\r\n    \"particles\": {\r\n      \"number\": {\r\n        \"value\": 100,\r\n        \"density\": {\r\n          \"enable\": true,\r\n          \"value_area\": 1200\r\n        }\r\n      },\r\n      \"color\": {\r\n        \"value\": \"#020202\"\r\n      },\r\n      \"shape\": {\r\n        \"type\": \"triangle\",\r\n        \"stroke\": {\r\n          \"width\": 1,\r\n          \"color\": \"#ecc860\"\r\n        },\r\n        \"polygon\": {\r\n          \"nb_sides\": 5\r\n        },\r\n        \"image\": {\r\n          \"src\": \"img/github.svg\",\r\n          \"width\": 100,\r\n          \"height\": 100\r\n        }\r\n      },\r\n      \"opacity\": {\r\n        \"value\": 0.5,\r\n        \"random\": false,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 1,\r\n          \"opacity_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"size\": {\r\n        \"value\": 3,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 40,\r\n          \"size_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"line_linked\": {\r\n        \"enable\": true,\r\n        \"distance\": 90,\r\n        \"color\": \"#ecc860\",\r\n        \"opacity\": 0.4,\r\n        \"width\": 1.736124811591\r\n      },\r\n      \"move\": {\r\n        \"enable\": true,\r\n        \"speed\": 6,\r\n        \"direction\": \"none\",\r\n        \"random\": false,\r\n        \"straight\": false,\r\n        \"out_mode\": \"out\",\r\n        \"bounce\": false,\r\n        \"attract\": {\r\n          \"enable\": false,\r\n          \"rotateX\": 600,\r\n          \"rotateY\": 1200\r\n        }\r\n      }\r\n    },\r\n    \"interactivity\": {\r\n      \"detect_on\": \"window\",\r\n      \"events\": {\r\n        \"onhover\": {\r\n          \"enable\": false,\r\n          \"mode\": \"repulse\"\r\n        },\r\n        \"onclick\": {\r\n          \"enable\": false,\r\n          \"mode\": \"push\"\r\n        },\r\n        \"resize\": true\r\n      },\r\n      \"modes\": {\r\n        \"grab\": {\r\n          \"distance\": 400,\r\n          \"line_linked\": {\r\n            \"opacity\": 1\r\n          }\r\n        },\r\n        \"bubble\": {\r\n          \"distance\": 400,\r\n          \"size\": 40,\r\n          \"duration\": 2,\r\n          \"opacity\": 8,\r\n          \"speed\": 3\r\n        },\r\n        \"repulse\": {\r\n          \"distance\": 200,\r\n          \"duration\": 0.4\r\n        },\r\n        \"push\": {\r\n          \"particles_nb\": 4\r\n        },\r\n        \"remove\": {\r\n          \"particles_nb\": 2\r\n        }\r\n      }\r\n    },\r\n    \"retina_detect\": true\r\n  };\r\n\r\n  let i = 0;\r\n  let peoples = [];\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            people: [],\r\n            searchField: ''\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n         this.fetchSwapi();\r\n        }, 2000)\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({\r\n            searchField: event.target.value\r\n        });\r\n    }\r\n\r\n    fetchSwapi = () => {\r\n        i = ++i;\r\n        let api = 'https://swapi.co/api/people/?page=' +i;\r\n        fetch(api)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                peoples = peoples.concat(data.results);\r\n                if(data.next === null){\r\n                    this.setState({people: peoples})\r\n                    return -1;\r\n                } else {\r\n                    this.fetchSwapi()\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    render(){\r\n        const {people, searchField} = this.state;\r\n        const searchPeople = people.filter(people => {\r\n            return people.name.toLowerCase().includes(searchField.toLowerCase())\r\n        });\r\n        return !people.length ? <h1 style={{color: \"#fff\", textAlign: \"center\"}}>Loading...</h1> :\r\n                (\r\n                    <div>\r\n                    <Particles className='particles'\r\n                        params={particlesJSON}\r\n                    />\r\n                        <Headers searchChange={this.onSearchChange}/>\r\n                        <ContainerData people={searchPeople}/>\r\n                    </div>\r\n                )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}